@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model List<WordSet>
@{
    List<WordSet> list = new List<WordSet>();
    list.Add(new WordSet { ListID = 1, Name = "Home" });
    list.Add(new WordSet { ListID = 2, Name = "Home2" });
    list.Add(new WordSet { ListID = 3, Name = "Home1" });
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="list-box-container">
                <h3 class="mb-4">Select Options</h3>
                <div class="alert alert-danger d-none" role="alert" id="errorMessage">
                    Please select at least one option
                </div>
                <div class="list-box p-4">
                    <div class="row">
                        <div class="col-md-6">
                            @for (int i = 0; i < list.Count / 2 + 1; i++)
                            {
                                <div class="list-item">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" value="" id=@list[i].ListID>
                                        <label class="form-check-label" for="option1">
                                            Option @i: @list[i].Name
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="col-md-6">
                            @for (int i = list.Count / 2 + 1; i < list.Count; i++)
                            {
                                <div class="list-item">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" value="" id=@list[i].ListID>
                                        <label class="form-check-label" for="option4">
                                            Option @i: @list[i].Name
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="mt-4">
                    <button class="btn btn-primary" onclick="validateSelection()">Submit Selection</button>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        async function validateSelection() {
            var res = [];
            const checkboxes = document.querySelectorAll(".form-check-input");
            const errorMessage = document.getElementById("errorMessage");

            checkboxes.forEach(checkbox => {
                if (checkbox.checked) {
                    console.log(checkbox.id);
                    res.push(checkbox.id);
                }
            });
            console.log("Length:" + res.length);
            if (res.length == 0) {
                errorMessage.classList.remove("d-none");
                return;
            }
            errorMessage.classList.add("d-none");

            var url = "@Url.ActionLink("AnswerQuestion", "LearningFeature")";
            const response = await fetch(url, {
                method: 'POST', // HTTP method
                headers: {
                    'Content-Type': 'application/json', // Set the Content-Type header
                },
                body: JSON.stringify(res), // Convert JavaScript object to JSON string
            });
            console.log(JSON.stringify(res));
            if (!response.ok)
                console.log("some error happend")
            else
                console.log("send success")
        }
    </script>
}
@section Styles {
    <style>
.list-box-container {
    max-width: 800px;
    margin: 0 auto;
}

.list-box {
    background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);
    border-radius: 15px;
    box-shadow: 0 8px 30px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
}

.list-box:hover {
    transform: translateY(-5px);
    box-shadow: 0 12px 40px rgba(0,0,0,0.15);
}

.list-item {
    padding: 12px;
    border-bottom: 1px solid #e9ecef;
    transition: background-color 0.3s ease;
}

.list-item:last-child {
    border-bottom: none;
}

.list-item:hover {
    background-color: rgba(0,0,0,0.02);
}

.form-check-input {
    cursor: pointer;
    transition: all 0.2s ease;
}

.form-check-input:checked {
    background-color: #0d6efd;
    border-color: #0d6efd;
    animation: checkmark 0.2s ease-in-out;
}

.form-check-label {
    cursor: pointer;
    padding-left: 8px;
    color: #495057;
    font-weight: 500;
}

@@keyframes checkmark {
    0% {
        transform: scale(0);
    }
    50% {
        transform: scale(1.2);
    }
    100% {
        transform: scale(1);
    }
}

.alert {
    border-radius: 10px;
    font-size: 0.9rem;
}

@@media (max-width: 768px) {
    .list-box {
        border-radius: 10px;
    }
    
    .list-item {
        padding: 10px;
    }
}

    </style>
}
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
